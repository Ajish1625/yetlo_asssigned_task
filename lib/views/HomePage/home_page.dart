import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

import '../../models/api_detail.dart';
import '../../viewmodels/FullScreenImage/FullScreenImagePage.dart';

class HomePage extends StatefulWidget {
  @override
  _HomePageState createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  List<String> imageUrls = [];

  List<Res> _subCategories = [];

  @override
  void initState() {
    super.initState();
    setState(() {
      makeMultipartRequest();
    });
  }

  //api data
  void makeMultipartRequest() async {
    final url =
        Uri.parse('https://yetlosocial.yetloapps.com/api-1.0.3/sub_categories');

    final request = http.MultipartRequest('POST', url);

    request.headers['Authorization'] =
        'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2NTUyNzI4NzMsImlzcyI6IllqRzhMdjE5TDBVclRSZmFXc3NoT0k2aXJrTGpzMWtSIiwic3ViIjoiTXV2aWVyZWNrIEF1dGhlbnRpY2F0aW9uIn0.XMiCPoVEJa0WJiDy3NuFkTXUdFyxEonEvVpkDONMr4s';

    request.fields['customer_id'] = '70';
    request.fields['token'] = '27f2ac-7423b6-403f6d-44aec7-0c319c';
    request.fields['style'] = 'style_6';
    request.fields['section_id'] = '6';

    try {
      final response = await request.send();
      if (response.statusCode == 200) {
        final responseBody = await response.stream.bytesToString();
        final jsonData = json.decode(responseBody);
        final generatedData = Autogenerated.fromJson(jsonData);
        _subCategories =
            generatedData.res ?? []; // Store the fetched Res objects
        fetchImageUrls(); // Fetch image URLs from the Res objects

        print(
            'Request successful! ${_subCategories.length} subcategories found.');

        print(responseBody);
      } else {
        print('Request failed with status code ${response.statusCode}');
      }
    } catch (e) {
      print('Error making the request: $e');
    }
  }

  void fetchImageUrls() {
    for (var res in _subCategories) {
      if (res.image != 'not running state') {
        imageUrls.add(res.image!);
        // imageUrls.removeLast();
        // textUrl.add(res.id as Int);
        // print('>>>>>>>${imageUrls.length}');
      }
      setState(() {});
    }
  }

  void navigateToFullScreenImage(String imageUrl) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) =>

            //SampleStack()
            FullScreenImagePage(imageUrl: imageUrl),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topRight,
            end: Alignment.bottomLeft,
            stops: [
              0.1,
              0.4,
              0.6,
              0.9,
            ],
            colors: [
              Colors.brown,
              Colors.pinkAccent,
              Colors.greenAccent,
              Colors.deepOrangeAccent,
            ],
          ),
        ),
        child: GridView.builder(
          gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
            crossAxisCount: 2, // Change the number of columns here as needed
            // crossAxisSpacing: 8.0,
            // mainAxisSpacing: 8.0,
          ),
          itemCount: imageUrls.length - 1,
          semanticChildCount: 10,
          itemBuilder: (context, index) {
            return GestureDetector(
              onTap: () {
                navigateToFullScreenImage(imageUrls[index]);
              },
              child: Card(
                elevation: 30,
                color: Colors.white30,
                child: Image.network(
                  imageUrls[index],
                  fit: BoxFit.cover,
                ),
              ),
            );
          },
        ),
      ),
    );
  }
}
